ID: Teste
NUMBER: 8
COLON: :
PROGRAM: program
ID: teste8
DECLARE: declare
INTEGER: integer
ID: n
COMMA: ,
ID: a
COMMA: ,
ID: b
COMMA: ,
ID: i
COMMA: ,
ID: next
SEMICOLON: ;
BEGIN: begin
READ: read
LPAREN: (
ID: n
RPAREN: )
SEMICOLON: ;
ID: a
COLON: :
EQUAL: =
NUMBER: 0
SEMICOLON: ;
ID: b
COLON: :
EQUAL: =
NUMBER: 1
SEMICOLON: ;
IF: if
LPAREN: (
ID: n
GT: >
EQUAL: =
NUMBER: 1
RPAREN: )
THEN: then
WRITE: write
LPAREN: (
ID: a
RPAREN: )
END: end
SEMICOLON: ;
IF: if
LPAREN: (
ID: n
GT: >
EQUAL: =
NUMBER: 2
RPAREN: )
THEN: then
WRITE: write
LPAREN: (
ID: b
RPAREN: )
END: end
SEMICOLON: ;
FOR: for
LPAREN: (
ID: i
COLON: :
EQUAL: =
NUMBER: 3
SEMICOLON: ;
ID: i
LT: <
EQUAL: =
ID: n
SEMICOLON: ;
ID: i
COLON: :
EQUAL: =
ID: i
OPERATOR: +
NUMBER: 1
RPAREN: )
DO: do
ID: next
COLON: :
EQUAL: =
ID: a
OPERATOR: +
ID: b
SEMICOLON: ;
WRITE: write
LPAREN: (
ID: next
RPAREN: )
SEMICOLON: ;
ID: a
COLON: :
EQUAL: =
ID: b
SEMICOLON: ;
ID: b
COLON: :
EQUAL: =
ID: next
END: end
END: end

Tabela de SÃ­mbolos:
Teste: [(2, 'ID')]
teste8: [(4, 'ID')]
n: [(8, 'ID'), (12, 'ID'), (17, 'ID'), (21, 'ID'), (25, 'ID')]
a: [(8, 'ID'), (14, 'ID'), (18, 'ID'), (26, 'ID'), (28, 'ID')]
b: [(8, 'ID'), (15, 'ID'), (22, 'ID'), (26, 'ID'), (28, 'ID'), (29, 'ID')]
i: [(8, 'ID'), (25, 'ID'), (25, 'ID'), (25, 'ID'), (25, 'ID')]
next: [(8, 'ID'), (26, 'ID'), (27, 'ID'), (29, 'ID')]